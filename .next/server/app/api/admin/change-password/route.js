"use strict";(()=>{var e={};e.id=2241,e.ids=[2241],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},93740:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>g,patchFetch:()=>I,requestAsyncStorage:()=>x,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>w});var a={};s.r(a),s.d(a,{POST:()=>c});var t=s(49303),o=s(88716),i=s(60670),n=s(87070),d=s(75571),p=s(95456),u=s(13538),l=s(98691);async function c(e){try{let r=await (0,d.getServerSession)(p.L);if(!r?.user?.email)return n.NextResponse.json({error:"Unauthorized"},{status:401});let{currentPassword:s,newPassword:a}=await e.json();if(!s||!a)return n.NextResponse.json({error:"Current password and new password are required"},{status:400});let t=await u._.user.findUnique({where:{email:r.user.email}});if(!t)return n.NextResponse.json({error:"User not found"},{status:404});if(!await l.ZP.compare(s,t.password))return n.NextResponse.json({error:"Current password is incorrect"},{status:400});let o=await l.ZP.hash(a,12);return await u._.user.update({where:{email:r.user.email},data:{password:o}}),n.NextResponse.json({message:"Password changed successfully"})}catch(e){return console.error("Password change error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}let m=new t.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/admin/change-password/route",pathname:"/api/admin/change-password",filename:"route",bundlePath:"app/api/admin/change-password/route"},resolvedPagePath:"/home/mexy/Desktop/newNogalss/src/app/api/admin/change-password/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:x,staticGenerationAsyncStorage:w,serverHooks:h}=m,g="/api/admin/change-password/route";function I(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:w})}},95456:(e,r,s)=>{s.d(r,{L:()=>n});var a=s(53797),t=s(7585),o=s(13538),i=s(98691);let n={adapter:(0,t.N)(o._),providers:[(0,a.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;let r=await o._.user.findUnique({where:{email:e.email}});return r&&r.password&&await i.ZP.compare(e.password,r.password)?{id:r.id,email:r.email,name:`${r.firstName} ${r.lastName}`,role:r.role,cooperativeId:r.cooperativeId,leaderId:r.leaderId,apexId:r.apexId,businessId:r.businessId}:null}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.role=r.role,e.cooperativeId=r.cooperativeId,e.leaderId=r.leaderId,e.apexId=r.apexId,e.businessId=r.businessId),e),session:async({session:e,token:r})=>(r&&(e.user.id=r.sub,e.user.role=r.role,e.user.cooperativeId=r.cooperativeId,e.user.leaderId=r.leaderId,e.user.apexId=r.apexId,e.user.businessId=r.businessId),e)},pages:{signIn:"/auth/signin",error:"/auth/error"}}},13538:(e,r,s)=>{s.d(r,{_:()=>t});var a=s(53524);let t=globalThis.prisma??new a.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),a=r.X(0,[9276,5972,8691,3643],()=>s(93740));module.exports=a})();