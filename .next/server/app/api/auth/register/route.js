"use strict";(()=>{var e={};e.id=3002,e.ids=[3002],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},58933:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>w,patchFetch:()=>x,requestAsyncStorage:()=>m,routeModule:()=>c,serverHooks:()=>g,staticGenerationAsyncStorage:()=>h});var a={};t.r(a),t.d(a,{POST:()=>l});var s=t(49303),i=t(88716),o=t(60670),n=t(87070),u=t(13538),p=t(98691),d=t(53524);async function l(e){try{let r=await e.json(),{registrationType:t}=r;if("COOPERATIVE"===t){let{cooperativeName:e,cooperativeRegNo:t,bankName:a,bankAccountNumber:s,address:i,city:o,lga:l,state:c,phone:m,cooperativeEmail:h,leaderFirstName:g,leaderLastName:w,leaderEmail:x,leaderPassword:f,leaderPhone:v,leaderTitle:R}=r;for(let[r,u]of Object.entries({cooperativeName:e,cooperativeRegNo:t,bankName:a,bankAccountNumber:s,address:i,city:o,lga:l,state:c,phone:m,leaderFirstName:g,leaderLastName:w,leaderEmail:x,leaderPassword:f,leaderPhone:v,leaderTitle:R}))if(!u)return n.NextResponse.json({error:`Field '${r}' is required.`},{status:400});if(await u._.user.findUnique({where:{email:x}}))return n.NextResponse.json({error:"A user with this email already exists."},{status:409});if(await u._.cooperative.findUnique({where:{registrationNumber:t}}))return n.NextResponse.json({error:"A co-operative with this registration number already exists."},{status:409});let N=await u._.$transaction(async r=>{let n=await r.cooperative.create({data:{name:e,registrationNumber:t,bankName:a,bankAccountNumber:s,address:i,city:o,lga:l,state:c,phoneNumber:m,email:h||x}}),u=await p.ZP.hash(f,12),N=await r.user.create({data:{firstName:g,lastName:w,email:x,password:u,role:d.UserRole.LEADER,cooperativeId:n.id,phoneNumber:v}});return await r.leader.create({data:{userId:N.id,cooperativeId:n.id,position:R}}),{cooperative:n,leaderUser:N}});return n.NextResponse.json({message:`Co-operative '${N.cooperative.name}' and leader account created successfully. You can now sign in.`},{status:201})}if("MEMBER"!==t)return n.NextResponse.json({error:"Invalid registration type."},{status:400});{let{firstName:e,lastName:t,email:a,password:s,cooperativeCode:i}=r;if(!e||!t||!a||!s||!i)return n.NextResponse.json({error:"All fields are required for member registration."},{status:400});let o=await u._.cooperative.findUnique({where:{registrationNumber:i}});if(!o)return n.NextResponse.json({error:"Invalid Co-operative Code. Please check the code and try again."},{status:404});let l=await p.ZP.hash(s,12);return await u._.user.create({data:{firstName:e,lastName:t,email:a,password:l,role:d.UserRole.MEMBER,cooperativeId:o.id}}),n.NextResponse.json({message:"Member account created successfully. You can now sign in."},{status:201})}}catch(e){if(console.error("Registration error:",e),"P2002"===e.code&&e.meta?.target?.includes("email"))return n.NextResponse.json({error:"A user with this email already exists."},{status:409});return n.NextResponse.json({error:"An internal server error occurred."},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"/home/mexy/Desktop/newNogalss/src/app/api/auth/register/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:h,serverHooks:g}=c,w="/api/auth/register/route";function x(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:h})}},13538:(e,r,t)=>{t.d(r,{_:()=>s});var a=t(53524);let s=globalThis.prisma??new a.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[9276,5972,8691],()=>t(58933));module.exports=a})();