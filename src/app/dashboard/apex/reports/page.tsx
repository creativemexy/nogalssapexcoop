"use client";

import { useState, useEffect } from "react";
import Link from "next/link";

interface ReportData {
  totalUsers: number;
  totalCooperatives: number;
  totalTransactions: number;
  totalContributions: number;
  totalLoans: number;
  pendingLoans: number;
  approvedLoans: number;
  rejectedLoans: number;
  activeLoans: number;
  completedLoans: number;
}

export default function ApexReportsPage() {
  const [reportData, setReportData] = useState<ReportData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [selectedReport, setSelectedReport] = useState<string>("overview");

  useEffect(() => {
    fetchReportData();
  }, []);

  const fetchReportData = async () => {
    setLoading(true);
    setError(null);
    try {
      const res = await fetch("/api/apex/dashboard-stats");
      if (!res.ok) throw new Error("Failed to fetch report data");
      const data = await res.json();
      setReportData(data);
    } catch (err: any) {
      setError(err.message || "Unknown error");
    } finally {
      setLoading(false);
    }
  };

  const generateReport = () => {
    if (!reportData) return;
    
    const reportContent = `
APEX COOPERATIVE REPORTS
Generated: ${new Date().toLocaleString()}

OVERVIEW STATISTICS:
- Total Users: ${reportData.totalUsers}
- Total Cooperatives: ${reportData.totalCooperatives}
- Total Transactions: ${reportData.totalTransactions}

FINANCIAL SUMMARY:
- Total Contributions: ₦${reportData.totalContributions.toLocaleString()}
- Total Loans: ₦${reportData.totalLoans.toLocaleString()}

LOAN STATUS BREAKDOWN:
- Pending Loans: ${reportData.pendingLoans}
- Approved Loans: ${reportData.approvedLoans}
- Rejected Loans: ${reportData.rejectedLoans}
- Active Loans: ${reportData.activeLoans}
- Completed Loans: ${reportData.completedLoans}

This report was generated by the Apex Cooperative Management System.
    `;
    
    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `apex-report-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
  };

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-red-600 font-semibold">{error}</div>
      </div>
    );
  }

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold text-gray-900">Reports & Analytics</h1>
        <Link href="/dashboard/apex" className="text-[#0D5E42] hover:text-[#0A4A35]">&larr; Back to Apex Dashboard</Link>
      </div>

      {/* Report Type Selection */}
      <div className="bg-white rounded-lg shadow p-6 mb-6">
        <h2 className="text-xl font-semibold mb-4">Select Report Type</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <button
            onClick={() => setSelectedReport("overview")}
            className={`p-4 rounded-lg border-2 ${
              selectedReport === "overview"
                ? "border-[#0D5E42] bg-green-50"
                : "border-gray-200 hover:border-gray-300"
            }`}
          >
            <h3 className="font-medium text-gray-900">Overview Report</h3>
            <p className="text-sm text-gray-600">General statistics and metrics</p>
          </button>
          <button
            onClick={() => setSelectedReport("financial")}
            className={`p-4 rounded-lg border-2 ${
              selectedReport === "financial"
                ? "border-[#0D5E42] bg-green-50"
                : "border-gray-200 hover:border-gray-300"
            }`}
          >
            <h3 className="font-medium text-gray-900">Financial Report</h3>
            <p className="text-sm text-gray-600">Contributions, loans, and financial data</p>
          </button>
          <button
            onClick={() => setSelectedReport("loans")}
            className={`p-4 rounded-lg border-2 ${
              selectedReport === "loans"
                ? "border-[#0D5E42] bg-green-50"
                : "border-gray-200 hover:border-gray-300"
            }`}
          >
            <h3 className="font-medium text-gray-900">Loans Report</h3>
            <p className="text-sm text-gray-600">Loan status and performance</p>
          </button>
        </div>
      </div>

      {/* Report Content */}
      {reportData && (
        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-xl font-semibold">
              {selectedReport === "overview" && "Overview Report"}
              {selectedReport === "financial" && "Financial Report"}
              {selectedReport === "loans" && "Loans Report"}
            </h2>
            <button
              onClick={generateReport}
              className="bg-[#0D5E42] text-white px-6 py-2 rounded hover:bg-[#0A4A35]"
            >
              Download Report
            </button>
          </div>

          {selectedReport === "overview" && (
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="bg-gray-50 p-4 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Total Users</h3>
                <p className="text-3xl font-bold text-[#0D5E42]">{reportData.totalUsers}</p>
              </div>
              <div className="bg-gray-50 p-4 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Total Cooperatives</h3>
                <p className="text-3xl font-bold text-[#0D5E42]">{reportData.totalCooperatives}</p>
              </div>
              <div className="bg-gray-50 p-4 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Total Transactions</h3>
                <p className="text-3xl font-bold text-[#0D5E42]">{reportData.totalTransactions}</p>
              </div>
            </div>
          )}

          {selectedReport === "financial" && (
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="bg-gray-50 p-4 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Total Contributions</h3>
                <p className="text-3xl font-bold text-green-600">₦{reportData.totalContributions.toLocaleString()}</p>
              </div>
              <div className="bg-gray-50 p-4 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Total Loans</h3>
                <p className="text-3xl font-bold text-blue-600">₦{reportData.totalLoans.toLocaleString()}</p>
              </div>
            </div>
          )}

          {selectedReport === "loans" && (
            <div className="grid grid-cols-1 md:grid-cols-5 gap-4">
              <div className="bg-yellow-50 p-4 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Pending</h3>
                <p className="text-2xl font-bold text-yellow-600">{reportData.pendingLoans}</p>
              </div>
              <div className="bg-green-50 p-4 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Approved</h3>
                <p className="text-2xl font-bold text-green-600">{reportData.approvedLoans}</p>
              </div>
              <div className="bg-red-50 p-4 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Rejected</h3>
                <p className="text-2xl font-bold text-red-600">{reportData.rejectedLoans}</p>
              </div>
              <div className="bg-blue-50 p-4 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Active</h3>
                <p className="text-2xl font-bold text-blue-600">{reportData.activeLoans}</p>
              </div>
              <div className="bg-gray-50 p-4 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Completed</h3>
                <p className="text-2xl font-bold text-gray-600">{reportData.completedLoans}</p>
              </div>
            </div>
          )}

          <div className="mt-6 p-4 bg-gray-50 rounded-lg">
            <h3 className="font-medium text-gray-900 mb-2">Report Summary</h3>
            <p className="text-sm text-gray-600">
              This report was generated on {new Date().toLocaleString()} and contains the latest data from the Apex Cooperative Management System.
              Use the "Download Report" button to save this report as a text file.
            </p>
          </div>
        </div>
      )}
    </div>
  );
}
