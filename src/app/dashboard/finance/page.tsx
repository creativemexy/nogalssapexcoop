'use client';

import { useEffect, useState } from 'react';
import { useSocket } from '@/hooks/useSocket';
import Link from 'next/link';

interface FinanceStats {
  totalInflow: number;
  totalOutflow: number;
  netBalance: number;
  adminFees: { amount: number; count: number };
  contributions: { amount: number; count: number };
  loans: { amount: number; count: number };
  withdrawals: { amount: number; count: number };
  loanRepayments: { amount: number; count: number };
  recentTransactions: Array<{
    id: string;
    type: string;
    amount: number;
    description: string;
    date: string;
    user: string;
  }>;
  monthlyBreakdown: Array<{
    month: string;
    amount: number;
    count: number;
  }>;
  userBreakdown: Array<{
    role: string;
    count: number;
  }>;
}

export default function FinancePage() {
  const [stats, setStats] = useState<FinanceStats | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  const socket = useSocket();
  
  useEffect(() => {
    if (!socket) return;
    const handleUpdate = () => {
      fetchStats();
    };
    socket.on('dashboard:update', handleUpdate);
    return () => {
      socket.off('dashboard:update', handleUpdate);
    };
  }, [socket]);

  const fetchStats = async () => {
    try {
      const res = await fetch('/api/finance/dashboard-stats');
      if (!res.ok) throw new Error('Failed to fetch finance stats');
      const data = await res.json();
      setStats(data);
    } catch (err: any) {
      setError(err.message || 'Failed to load finance data');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchStats();
  }, []);

  const generateReport = () => {
    if (!stats) return;
    
    const reportContent = `
NOGALSS COOPERATIVE FINANCE REPORT
Generated: ${new Date().toLocaleString()}

FINANCIAL SUMMARY:
- Total Inflow: ‚Ç¶${stats.totalInflow.toLocaleString()}
- Total Outflow: ‚Ç¶${stats.totalOutflow.toLocaleString()}
- Net Balance: ‚Ç¶${stats.netBalance.toLocaleString()}

DETAILED BREAKDOWN:
- Administrative Fees: ‚Ç¶${stats.adminFees.amount.toLocaleString()} (${stats.adminFees.count} transactions)
- Contributions/Savings: ‚Ç¶${stats.contributions.amount.toLocaleString()} (${stats.contributions.count} transactions)
- Loan Repayments: ‚Ç¶${stats.loanRepayments.amount.toLocaleString()} (${stats.loanRepayments.count} transactions)
- Loans: ‚Ç¶${stats.loans.amount.toLocaleString()} (${stats.loans.count} loans)
- Withdrawals: ‚Ç¶${stats.withdrawals.amount.toLocaleString()} (${stats.withdrawals.count} transactions)

RECENT TRANSACTIONS:
${stats.recentTransactions.map(t => 
  `- ${t.type}: ‚Ç¶${t.amount.toLocaleString()} (${t.user}) - ${new Date(t.date).toLocaleDateString()}`
).join('\n')}

This report was generated by the Nogalss Cooperative Finance System.
    `;
    
    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `finance-report-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
  };

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-red-600 font-semibold">{error}</div>
      </div>
    );
  }

  if (!stats) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-gray-600">No financial data available</div>
      </div>
    );
  }

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div className="flex justify-between items-center mb-8">
        <h1 className="text-3xl font-bold text-gray-900">Finance Dashboard</h1>
        <div className="flex space-x-4">
          <Link
            href="/dashboard/finance/reports"
            className="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700"
          >
            üìä Detailed Reports
          </Link>
          <button
            onClick={generateReport}
            className="bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700"
          >
            üìÑ Quick Report
          </button>
          <Link href="/dashboard" className="text-green-600 hover:text-green-700">
            ‚Üê Back to Dashboard
          </Link>
        </div>
      </div>

      {/* Main Financial Metrics */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        <div className="bg-white rounded-lg shadow p-6 border-l-4 border-green-500">
          <h3 className="text-lg font-medium text-gray-900">Total Inflow</h3>
          <p className="text-3xl font-bold text-green-600">‚Ç¶{stats.totalInflow.toLocaleString()}</p>
          <p className="text-sm text-gray-500 mt-1">All money coming in</p>
        </div>
        
        <div className="bg-white rounded-lg shadow p-6 border-l-4 border-red-500">
          <h3 className="text-lg font-medium text-gray-900">Total Outflow</h3>
          <p className="text-3xl font-bold text-red-600">‚Ç¶{stats.totalOutflow.toLocaleString()}</p>
          <p className="text-sm text-gray-500 mt-1">All money going out</p>
        </div>
        
        <div className="bg-white rounded-lg shadow p-6 border-l-4 border-blue-500">
          <h3 className="text-lg font-medium text-gray-900">Net Balance</h3>
          <p className={`text-3xl font-bold ${stats.netBalance >= 0 ? 'text-blue-600' : 'text-red-600'}`}>
            ‚Ç¶{stats.netBalance.toLocaleString()}
          </p>
          <p className="text-sm text-gray-500 mt-1">Current balance</p>
        </div>
      </div>

      {/* Detailed Financial Breakdown */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 mb-8">
        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-medium text-gray-900">Admin Fees</h3>
          <p className="text-2xl font-bold text-purple-600">‚Ç¶{stats.adminFees.amount.toLocaleString()}</p>
          <p className="text-sm text-gray-500">{stats.adminFees.count} transactions</p>
        </div>
        
        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-medium text-gray-900">Contributions</h3>
          <p className="text-2xl font-bold text-green-600">‚Ç¶{stats.contributions.amount.toLocaleString()}</p>
          <p className="text-sm text-gray-500">{stats.contributions.count} transactions</p>
        </div>
        
        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-medium text-gray-900">Loan Repayments</h3>
          <p className="text-2xl font-bold text-blue-600">‚Ç¶{stats.loanRepayments.amount.toLocaleString()}</p>
          <p className="text-sm text-gray-500">{stats.loanRepayments.count} transactions</p>
        </div>
        
        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-medium text-gray-900">Loans</h3>
          <p className="text-2xl font-bold text-orange-600">‚Ç¶{stats.loans.amount.toLocaleString()}</p>
          <p className="text-sm text-gray-500">{stats.loans.count} loans</p>
        </div>
        
        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-medium text-gray-900">Withdrawals</h3>
          <p className="text-2xl font-bold text-red-600">‚Ç¶{stats.withdrawals.amount.toLocaleString()}</p>
          <p className="text-sm text-gray-500">{stats.withdrawals.count} transactions</p>
        </div>
      </div>

      {/* Recent Transactions */}
      <div className="bg-white rounded-lg shadow mb-8">
        <div className="px-6 py-4 border-b border-gray-200">
          <h2 className="text-xl font-semibold text-gray-900">Recent Transactions</h2>
        </div>
        <div className="overflow-x-auto">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {stats.recentTransactions.length === 0 ? (
                <tr>
                  <td colSpan={5} className="px-6 py-4 text-center text-gray-500">No recent transactions</td>
                </tr>
              ) : (
                stats.recentTransactions.map((transaction) => (
                  <tr key={transaction.id}>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                        transaction.type === 'CONTRIBUTION' ? 'bg-green-100 text-green-800' :
                        transaction.type === 'WITHDRAWAL' ? 'bg-red-100 text-red-800' :
                        transaction.type === 'FEE' ? 'bg-yellow-100 text-yellow-800' :
                        'bg-gray-100 text-gray-800'
                      }`}>
                        {transaction.type}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      ‚Ç¶{transaction.amount.toLocaleString()}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {transaction.user}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {new Date(transaction.date).toLocaleDateString()}
                    </td>
                    <td className="px-6 py-4 text-sm text-gray-900">
                      {transaction.description}
                    </td>
                  </tr>
                ))
              )}
            </tbody>
          </table>
        </div>
      </div>

      {/* Quick Reports */}
      <div className="bg-white rounded-lg shadow p-6 mb-8">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">Quick Reports</h2>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          <Link
            href="/dashboard/finance/reports?period=daily"
            className="bg-blue-50 hover:bg-blue-100 p-4 rounded-lg text-center transition-colors"
          >
            <div className="text-2xl mb-2">üìÖ</div>
            <div className="font-semibold text-blue-800">Daily Report</div>
            <div className="text-sm text-blue-600">Today's activity</div>
          </Link>
          
          <Link
            href="/dashboard/finance/reports?period=weekly"
            className="bg-green-50 hover:bg-green-100 p-4 rounded-lg text-center transition-colors"
          >
            <div className="text-2xl mb-2">üìä</div>
            <div className="font-semibold text-green-800">Weekly Report</div>
            <div className="text-sm text-green-600">This week's summary</div>
          </Link>
          
          <Link
            href="/dashboard/finance/reports?period=monthly"
            className="bg-purple-50 hover:bg-purple-100 p-4 rounded-lg text-center transition-colors"
          >
            <div className="text-2xl mb-2">üìà</div>
            <div className="font-semibold text-purple-800">Monthly Report</div>
            <div className="text-sm text-purple-600">This month's analysis</div>
          </Link>
          
          <Link
            href="/dashboard/finance/reports?period=yearly"
            className="bg-orange-50 hover:bg-orange-100 p-4 rounded-lg text-center transition-colors"
          >
            <div className="text-2xl mb-2">üìã</div>
            <div className="font-semibold text-orange-800">Yearly Report</div>
            <div className="text-sm text-orange-600">Annual overview</div>
          </Link>
        </div>
      </div>

      {/* User Statistics */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">User Distribution</h2>
          <div className="space-y-3">
            {stats.userBreakdown.map((user) => (
              <div key={user.role} className="flex justify-between items-center">
                <span className="text-sm font-medium text-gray-700 capitalize">
                  {user.role.replace('_', ' ').toLowerCase()}
                </span>
                <span className="text-sm font-bold text-gray-900">{user.count}</span>
              </div>
            ))}
          </div>
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">Monthly Activity</h2>
          <div className="space-y-3">
            {stats.monthlyBreakdown.slice(0, 6).map((month) => (
              <div key={month.month} className="flex justify-between items-center">
                <span className="text-sm font-medium text-gray-700">
                  {new Date(month.month + '-01').toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}
                </span>
                <div className="text-right">
                  <div className="text-sm font-bold text-gray-900">‚Ç¶{month.amount.toLocaleString()}</div>
                  <div className="text-xs text-gray-500">{month.count} transactions</div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

